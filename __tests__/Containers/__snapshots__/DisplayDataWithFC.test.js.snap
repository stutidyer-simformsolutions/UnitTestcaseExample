// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Display data with function snapshot of the displayData with functional component 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "flex": 1,
      "marginHorizontal": 25,
    }
  }
>
  <View
    style={
      Object {
        "marginTop": 32,
      }
    }
  >
    <Text
      style={
        Object {
          "fontSize": 24,
          "fontWeight": "600",
        }
      }
    >
      Enter Value
    </Text>
    <TextInput
      keyboardType="numeric"
      onChangeText={[Function]}
      placeholder="Please enter the number"
      style={
        Object {
          "borderWidth": 1,
          "height": 40,
          "marginVertical": 12,
          "padding": 10,
        }
      }
      testID="section-textInput"
      value={null}
    />
    <View
      accessibilityRole="button"
      accessibilityState={
        Object {
          "disabled": true,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="section-button"
    >
      <View
        style={
          Array [
            Object {},
            Object {},
          ]
        }
      >
        <Text
          disabled={true}
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "margin": 8,
                "textAlign": "center",
              },
              Object {
                "color": "#cdcdcd",
              },
            ]
          }
        >
          Press me
        </Text>
      </View>
    </View>
    <RCTScrollView
      data={Array []}
      getItem={[Function]}
      getItemCount={[Function]}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      testID="data-flatlist"
      viewabilityConfigCallbackPairs={Array []}
    >
      <View />
    </RCTScrollView>
  </View>
</RCTSafeAreaView>
`;

exports[`Display data with function when user add value to the list 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "flex": 1,
      "marginHorizontal": 25,
    }
  }
>
  <View
    style={
      Object {
        "marginTop": 32,
      }
    }
  >
    <Text
      style={
        Object {
          "fontSize": 24,
          "fontWeight": "600",
        }
      }
    >
      Enter Value
    </Text>
    <TextInput
      keyboardType="numeric"
      onChangeText={[Function]}
      placeholder="Please enter the number"
      style={
        Object {
          "borderWidth": 1,
          "height": 40,
          "marginVertical": 12,
          "padding": 10,
        }
      }
      testID="section-textInput"
      value=""
    />
    <View
      accessibilityRole="button"
      accessibilityState={
        Object {
          "disabled": true,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="section-button"
    >
      <View
        style={
          Array [
            Object {},
            Object {},
          ]
        }
      >
        <Text
          disabled={true}
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "margin": 8,
                "textAlign": "center",
              },
              Object {
                "color": "#cdcdcd",
              },
            ]
          }
        >
          Press me
        </Text>
      </View>
    </View>
    <RCTScrollView
      data={
        Array [
          10,
        ]
      }
      getItem={[Function]}
      getItemCount={[Function]}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      testID="data-flatlist"
      viewabilityConfigCallbackPairs={Array []}
    >
      <View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-between",
                "padding": 5,
              }
            }
          >
            <Text
              style={
                Object {
                  "fontSize": 17,
                  "top": 10,
                }
              }
            >
              10
            </Text>
            <View
              accessibilityRole="button"
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID="edit-button"
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "margin": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Edit
                </Text>
              </View>
            </View>
            <View
              accessibilityRole="button"
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID="delete-button"
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "margin": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Delete
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</RCTSafeAreaView>
`;
